<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>